<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        rkJggg==
</value>
  </data>
</root>